<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>